<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>